/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PricingImport } from './routes/pricing'
import { Route as ContactImport } from './routes/contact'
import { Route as BlogImport } from './routes/blog'
import { Route as IndexImport } from './routes/index'
import { Route as ScheduleIndexImport } from './routes/schedule/index'
import { Route as ClassesIndexImport } from './routes/classes/index'
import { Route as ClassesRegisterImport } from './routes/classes/register'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const PricingRoute = PricingImport.update({
  id: '/pricing',
  path: '/pricing',
  getParentRoute: () => rootRoute,
} as any)

const ContactRoute = ContactImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any)

const BlogRoute = BlogImport.update({
  id: '/blog',
  path: '/blog',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ScheduleIndexRoute = ScheduleIndexImport.update({
  id: '/schedule/',
  path: '/schedule/',
  getParentRoute: () => rootRoute,
} as any)

const ClassesIndexRoute = ClassesIndexImport.update({
  id: '/classes/',
  path: '/classes/',
  getParentRoute: () => rootRoute,
} as any)

const ClassesRegisterRoute = ClassesRegisterImport.update({
  id: '/classes/register',
  path: '/classes/register',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/blog': {
      id: '/blog'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactImport
      parentRoute: typeof rootRoute
    }
    '/pricing': {
      id: '/pricing'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof PricingImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/classes/register': {
      id: '/classes/register'
      path: '/classes/register'
      fullPath: '/classes/register'
      preLoaderRoute: typeof ClassesRegisterImport
      parentRoute: typeof rootRoute
    }
    '/classes/': {
      id: '/classes/'
      path: '/classes'
      fullPath: '/classes'
      preLoaderRoute: typeof ClassesIndexImport
      parentRoute: typeof rootRoute
    }
    '/schedule/': {
      id: '/schedule/'
      path: '/schedule'
      fullPath: '/schedule'
      preLoaderRoute: typeof ScheduleIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/blog': typeof BlogRoute
  '/contact': typeof ContactRoute
  '/pricing': typeof PricingRoute
  '/about': typeof AboutLazyRoute
  '/classes/register': typeof ClassesRegisterRoute
  '/classes': typeof ClassesIndexRoute
  '/schedule': typeof ScheduleIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/blog': typeof BlogRoute
  '/contact': typeof ContactRoute
  '/pricing': typeof PricingRoute
  '/about': typeof AboutLazyRoute
  '/classes/register': typeof ClassesRegisterRoute
  '/classes': typeof ClassesIndexRoute
  '/schedule': typeof ScheduleIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/blog': typeof BlogRoute
  '/contact': typeof ContactRoute
  '/pricing': typeof PricingRoute
  '/about': typeof AboutLazyRoute
  '/classes/register': typeof ClassesRegisterRoute
  '/classes/': typeof ClassesIndexRoute
  '/schedule/': typeof ScheduleIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/blog'
    | '/contact'
    | '/pricing'
    | '/about'
    | '/classes/register'
    | '/classes'
    | '/schedule'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/blog'
    | '/contact'
    | '/pricing'
    | '/about'
    | '/classes/register'
    | '/classes'
    | '/schedule'
  id:
    | '__root__'
    | '/'
    | '/blog'
    | '/contact'
    | '/pricing'
    | '/about'
    | '/classes/register'
    | '/classes/'
    | '/schedule/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BlogRoute: typeof BlogRoute
  ContactRoute: typeof ContactRoute
  PricingRoute: typeof PricingRoute
  AboutLazyRoute: typeof AboutLazyRoute
  ClassesRegisterRoute: typeof ClassesRegisterRoute
  ClassesIndexRoute: typeof ClassesIndexRoute
  ScheduleIndexRoute: typeof ScheduleIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BlogRoute: BlogRoute,
  ContactRoute: ContactRoute,
  PricingRoute: PricingRoute,
  AboutLazyRoute: AboutLazyRoute,
  ClassesRegisterRoute: ClassesRegisterRoute,
  ClassesIndexRoute: ClassesIndexRoute,
  ScheduleIndexRoute: ScheduleIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/blog",
        "/contact",
        "/pricing",
        "/about",
        "/classes/register",
        "/classes/",
        "/schedule/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/blog": {
      "filePath": "blog.tsx"
    },
    "/contact": {
      "filePath": "contact.tsx"
    },
    "/pricing": {
      "filePath": "pricing.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/classes/register": {
      "filePath": "classes/register.tsx"
    },
    "/classes/": {
      "filePath": "classes/index.tsx"
    },
    "/schedule/": {
      "filePath": "schedule/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
